% This file was created with JabRef 2.7b.
% Encoding: UTF-8

@MISC{Simula.simula.1320,
  author = {Gotlieb, Arnaud and Hervieu, Aymeric and Baudry, Benoit},
  title = {Minimum pairwise coverage using constraint programming techniques},
  howpublished = {Proc. of CSTVA'2012, an IEEE ICST workshop},
  month = {March},
  year = {2012},
  note = {Short paper, 2 pages},
  keywords = {Workshop},
  owner = {aymeric},
  timestamp = {2012.09.01}
}

@MISC{gpl12,
  author = {Hervieu, A.},
  title = {Sélection automatique de configurations de pour le test d'applications},
  howpublished = {Journées GDR GPL 2012,},
  month = {06},
  year = {2012},
  note = {Poster.},
  file = {:http\://hervieu.info/wp-content/uploads/2012/09/GPL2012.pdf:URL},
  owner = {aymeric},
  timestamp = {2012.09.01},
  url = {http://hervieu.info/wp-content/uploads/2012/09/GPL2012.pdf}
}

@INPROCEEDINGS{hervieu:hal-00726137,
  author = {Hervieu, Aymeric and Baudry, Benoit and Gotlieb, Arnaud},
  title = {{Managing Execution Environment Variability during Software Testing:
	an industrial experience}},
  booktitle = {{International Conference on Testing Software and Systems}},
  year = {2012},
  address = {Aalborg, Danemark},
  month = Nov,
  publisher = {Springer},
  abstract = {{Nowadays, telecom software applications are expected to run on a
	tremendous variety of execution environments. For example, network
	connection software must deliver the same functionalities on distinct
	physical platforms, which themselves run several distinct operating
	systems, with various applications and physical devices. Testing
	those applications is challenging as it is simply impossible to consider
	every possible environment configuration. This paper reports on an
	industrial case study called BIEW (Business and Internet EveryWhere)
	where the combinatorial explosion of environment configurations has
	been tackled with a dedicated and original methodology devised by
	KEREVAL, a french SME focusing on software testing services. The
	proposed solution samples a subset of configurations to be tested,
	based on environment modelling, requirement analysis and systematic
	traceability. From the experience on this case study, we outline
	the challenges to develop means to select relevant environment configurations
	from variability modelling and requirement analysis in the testing
	processes of telecom software.}},
  affiliation = {TRISKELL - INRIA - IRISA , CELTIQUE - INRIA - IRISA},
  audience = {internationale },
  hal_id = {hal-00726137},
  language = {Anglais},
  owner = {aymeric},
  pdf = {http://hal.inria.fr/hal-00726137/PDF/ICTSS\_HBG\_12.pdf},
  timestamp = {2012.09.01},
  url = {http://hal.inria.fr/hal-00726137}
}

@INPROCEEDINGS{hervieu:hal-00699558,
  author = {Hervieu, Aymeric and Baudry, Benoit and Gotlieb, Arnaud},
  title = {{PACOGEN : Automatic Generation of Pairwise Test Configurations from
	Feature Models}},
  booktitle = {{Proc. of Int. Symp. on Soft. Reliability Engineering (ISSRE'11)}},
  year = {2011},
  address = {Hiroshima, Japon},
  abstract = {{Feature models are commonly used to specify variability in software
	product lines. Several tools support feature models for variability
	management at different steps in the development process. However,
	tool support for test configuration generation is currently limited.
	This test generation task consists in systematically selecting a
	set of configurations that represent a relevant sample of the variability
	space and that can be used to test the product line. In this paper
	we propose PACOGEN to analyze feature models and automatically generate
	a set of configurations that cover all pairwise interactions between
	features. PACOGEN relies on constraint programming to generate configurations
	that satisfy all constraints imposed by the feature model and to
	minimize the set of the tests configurations. This work also proposes
	an extensive experiment, based on the state-of-the art SPLOT feature
	models repository, showing that PACOGEN scales over variability spaces
	with millions of configurations and covers pairwise with less configurations
	than other available tools.}},
  affiliation = {TRISKELL - INRIA - IRISA , CELTIQUE - INRIA - IRISA},
  audience = {internationale },
  hal_id = {hal-00699558},
  language = {Anglais},
  owner = {aymeric},
  pdf = {http://hal.inria.fr/hal-00699558/PDF/HBG10.pdf},
  timestamp = {2012.09.01},
  url = {http://hal.inria.fr/hal-00699558}
}

